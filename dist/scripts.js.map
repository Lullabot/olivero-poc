{"version":3,"sources":["scripts.js"],"names":["window","drupalSettings","olivero","IntersectionObserverEntry","prototype","monitorNavPosition","primaryNav","document","querySelector","options","rootMargin","threshold","observer","IntersectionObserver","toggleDesktopNavVisibility","observe","entries","isDesktopNav","forEach","entry","intersectionRatio","fixables","el","classList","add","remove","navButtons","getComputedStyle","getPropertyValue","wideNavIsOpen","wideNavButton","getAttribute","showWideNav","setAttribute","siteHeaderToggleElement","hideWideNav","querySelectorAll","addEventListener","e","keyCode"],"mappings":"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","sourcesContent":["\n(function() {\n  window.drupalSettings = {};\n  window.drupalSettings.olivero = {};\n\n  // Only enable scroll effects if the browser supports Intersection Observer.\n  // @see https://github.com/w3c/IntersectionObserver/blob/master/polyfill/intersection-observer.js#L19-L21\n  if ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n    const fixables = document.querySelectorAll('.fixable')\n\n    function monitorNavPosition() {\n      const primaryNav = document.querySelector('.site-header');\n      const options = {\n        rootMargin: '72px',\n        threshold: [0.999, 1]\n      }\n\n      const observer = new IntersectionObserver(toggleDesktopNavVisibility, options);\n      observer.observe(primaryNav);\n    }\n\n    function toggleDesktopNavVisibility(entries) {\n      if (!isDesktopNav()) return;\n\n      entries.forEach(entry => {\n        // FF doesn't seem to support entry.isIntersecting properly,\n        // so we check the intersectionRatio.\n        if (entry.intersectionRatio < 1) {\n          fixables.forEach(el => el.classList.add('js-fixed'));\n        }\n        else {\n          fixables.forEach(el => el.classList.remove('js-fixed'));\n        }\n      });\n    }\n\n    function isDesktopNav() {\n      const navButtons = document.querySelector('.mobile-buttons');\n      return window.getComputedStyle(navButtons).getPropertyValue('display') === 'none';\n    }\n\n    drupalSettings.olivero.isDesktopNav = isDesktopNav;\n\n    monitorNavPosition();\n\n    // Toggle desktop nav visibility when scrolled down.\n    const wideNavButton = document.querySelector('.nav-primary__button');\n    const siteHeaderToggleElement = document.querySelector('.site-header__inner');\n\n    function wideNavIsOpen() {\n      return wideNavButton.getAttribute('aria-pressed') === 'true';\n    }\n\n    wideNavButton.addEventListener('click', () => {\n      if (!wideNavIsOpen()) {\n        showWideNav();\n      }\n      else {\n        hideWideNav();\n      }\n    });\n\n    function showWideNav() {\n      if (isDesktopNav()) {\n        wideNavButton.setAttribute('aria-pressed', 'true');\n        siteHeaderToggleElement.setAttribute('aria-expanded', 'true');\n      }\n    }\n\n    // Resets the wide nav button to be closed (it's default state).\n    function hideWideNav() {\n      if (isDesktopNav()) {\n        wideNavButton.setAttribute('aria-pressed', 'false');\n        siteHeaderToggleElement.setAttribute('aria-expanded', 'false');\n      }\n    }\n\n    siteHeaderToggleElement.addEventListener('focusin', showWideNav);\n\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) {\n        hideWideNav();\n      }\n    });\n  }\n})();\n"],"file":"scripts.js"}