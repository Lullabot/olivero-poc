{"version":3,"sources":["scripts.js"],"names":["window","drupalSettings","olivero","fixables","document","querySelectorAll","monitorNavPosition","primaryNav","querySelector","options","rootMargin","threshold","observer","IntersectionObserver","toggleDesktopNavVisibility","observe","entries","isDesktopNav","forEach","entry","isIntersecting","el","classList","add","remove","navButtons","getComputedStyle","getPropertyValue","wideNavButton","siteHeaderToggleElement","wideNavIsOpen","getAttribute","addEventListener","showWideNav","hideWideNav","setAttribute","e","keyCode"],"mappings":";;AAAA,CAAC,YAAW;AAEV;AACAA,EAAAA,MAAM,CAACC,cAAP,GAAwB,EAAxB;AACAD,EAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,GAAgC,EAAhC;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAAjB;;AAEA,WAASC,kBAAT,GAA8B;AAC5B,QAAMC,UAAU,GAAGH,QAAQ,CAACI,aAAT,CAAuB,cAAvB,CAAnB;AACA,QAAMC,OAAO,GAAG;AACdC,MAAAA,UAAU,EAAE,MADE;AAEdC,MAAAA,SAAS,EAAE;AAFG,KAAhB;AAKA,QAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,0BAAzB,EAAqDL,OAArD,CAAjB;AACAG,IAAAA,QAAQ,CAACG,OAAT,CAAiBR,UAAjB;AACD;;AAED,WAASO,0BAAT,CAAoCE,OAApC,EAA6C;AAC3C,QAAI,CAACC,YAAY,EAAjB,EAAqB;AAErBD,IAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACvB,UAAI,CAACA,KAAK,CAACC,cAAX,EAA2B;AACzBjB,QAAAA,QAAQ,CAACe,OAAT,CAAiB,UAAAG,EAAE;AAAA,iBAAIA,EAAE,CAACC,SAAH,CAAaC,GAAb,CAAiB,UAAjB,CAAJ;AAAA,SAAnB;AACD,OAFD,MAGK;AACHpB,QAAAA,QAAQ,CAACe,OAAT,CAAiB,UAAAG,EAAE;AAAA,iBAAIA,EAAE,CAACC,SAAH,CAAaE,MAAb,CAAoB,UAApB,CAAJ;AAAA,SAAnB,EADG,CAEH;AACD;AACF,KARD;AASD;;AAGD,WAASP,YAAT,GAAwB;AACtB,QAAMQ,UAAU,GAAGrB,QAAQ,CAACI,aAAT,CAAuB,iBAAvB,CAAnB;AACA,WAAOR,MAAM,CAAC0B,gBAAP,CAAwBD,UAAxB,EAAoCE,gBAApC,CAAqD,SAArD,MAAoE,MAA3E;AACD;;AAED1B,EAAAA,cAAc,CAACC,OAAf,CAAuBe,YAAvB,GAAsCA,YAAtC;AAEAX,EAAAA,kBAAkB,GAzCR,CA4CV;;AAEA,MAAMsB,aAAa,GAAGxB,QAAQ,CAACI,aAAT,CAAuB,sBAAvB,CAAtB;AACA,MAAMqB,uBAAuB,GAAGzB,QAAQ,CAACI,aAAT,CAAuB,qBAAvB,CAAhC;;AAEA,WAASsB,aAAT,GAAyB;AACvB,WAAOF,aAAa,CAACG,YAAd,CAA2B,cAA3B,MAA+C,MAAtD;AACD;;AAEDH,EAAAA,aAAa,CAACI,gBAAd,CAA+B,OAA/B,EAAwC,YAAM;AAC5C,QAAI,CAACF,aAAa,EAAlB,EAAsB;AACpBG,MAAAA,WAAW;AACZ,KAFD,MAGK;AACHC,MAAAA,WAAW;AACZ;AACF,GAPD;;AAWA,WAASD,WAAT,GAAuB;AACrBL,IAAAA,aAAa,CAACO,YAAd,CAA2B,cAA3B,EAA2C,MAA3C;AACAN,IAAAA,uBAAuB,CAACM,YAAxB,CAAqC,eAArC,EAAsD,MAAtD;AACD,GAnES,CAqEV;;;AACA,WAASD,WAAT,GAAuB;AACrBN,IAAAA,aAAa,CAACO,YAAd,CAA2B,cAA3B,EAA2C,OAA3C;AACAN,IAAAA,uBAAuB,CAACM,YAAxB,CAAqC,eAArC,EAAsD,OAAtD;AACD;;AAEDN,EAAAA,uBAAuB,CAACG,gBAAxB,CAAyC,SAAzC,EAAoDC,WAApD;AAEA7B,EAAAA,QAAQ,CAAC4B,gBAAT,CAA0B,OAA1B,EAAmC,UAAAI,CAAC,EAAI;AACtC,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBH,MAAAA,WAAW;AACZ;AACF,GAJD;AAMD,CAnFD","sourcesContent":["(function() {\n\n  // Set up drupalSettings and olivero global namespaces.\n  window.drupalSettings = {};\n  window.drupalSettings.olivero = {};\n\n  const fixables = document.querySelectorAll('.fixable')\n\n  function monitorNavPosition() {\n    const primaryNav = document.querySelector('.site-header');\n    const options = {\n      rootMargin: '72px',\n      threshold: 1\n    }\n\n    const observer = new IntersectionObserver(toggleDesktopNavVisibility, options);\n    observer.observe(primaryNav);\n  }\n\n  function toggleDesktopNavVisibility(entries) {\n    if (!isDesktopNav()) return;\n\n    entries.forEach(entry => {\n      if (!entry.isIntersecting) {\n        fixables.forEach(el => el.classList.add('js-fixed'));\n      }\n      else {\n        fixables.forEach(el => el.classList.remove('js-fixed'));\n        // resetWideNavButton();\n      }\n    });\n  }\n\n\n  function isDesktopNav() {\n    const navButtons = document.querySelector('.mobile-buttons');\n    return window.getComputedStyle(navButtons).getPropertyValue('display') === 'none';\n  }\n\n  drupalSettings.olivero.isDesktopNav = isDesktopNav;\n\n  monitorNavPosition();\n\n\n  // Toggle desktop nav visibility when scrolled down.\n\n  const wideNavButton = document.querySelector('.nav-primary__button');\n  const siteHeaderToggleElement = document.querySelector('.site-header__inner');\n\n  function wideNavIsOpen() {\n    return wideNavButton.getAttribute('aria-pressed') === 'true';\n  }\n\n  wideNavButton.addEventListener('click', () => {\n    if (!wideNavIsOpen()) {\n      showWideNav();\n    }\n    else {\n      hideWideNav();\n    }\n  });\n\n\n\n  function showWideNav() {\n    wideNavButton.setAttribute('aria-pressed', 'true');\n    siteHeaderToggleElement.setAttribute('aria-expanded', 'true');\n  }\n\n  // Resets the wide nav button to be closed (it's default state).\n  function hideWideNav() {\n    wideNavButton.setAttribute('aria-pressed', 'false');\n    siteHeaderToggleElement.setAttribute('aria-expanded', 'false');\n  }\n\n  siteHeaderToggleElement.addEventListener('focusin', showWideNav);\n\n  document.addEventListener('keyup', e => {\n    if (e.keyCode === 27) {\n      hideWideNav();\n    }\n  });\n\n})();\n"],"file":"scripts.js"}