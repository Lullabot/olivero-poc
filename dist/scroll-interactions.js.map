{"version":3,"sources":["scroll-interactions.js"],"names":["fixables","document","querySelectorAll","isDesktopNav","navButtons","querySelector","window","getComputedStyle","getPropertyValue","monitorNavPosition","primaryNav","options","rootMargin","threshold","observer","IntersectionObserver","toggleDesktopNavVisibility","observe","entries","forEach","entry","console","log","intersectionRatio","el","classList","add","remove","wideNavButton","siteHeaderToggleElement","wideNavIsOpen","getAttribute","addEventListener","showDesktopNav","resetWideNavButton","setAttribute"],"mappings":";;AAAA,CAAC,YAAW;AACV,MAAMA,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAAjB;;AAEA,WAASC,YAAT,GAAwB;AACtB,QAAMC,UAAU,GAAGH,QAAQ,CAACI,aAAT,CAAuB,iBAAvB,CAAnB;AACA,WAAOC,MAAM,CAACC,gBAAP,CAAwBH,UAAxB,EAAoCI,gBAApC,CAAqD,SAArD,MAAoE,MAA3E;AACD;;AAED,WAASC,kBAAT,GAA8B;AAC5B,QAAMC,UAAU,GAAGT,QAAQ,CAACI,aAAT,CAAuB,cAAvB,CAAnB;AACA,QAAMM,OAAO,GAAG;AACdC,MAAAA,UAAU,EAAE,MADE;AAEdC,MAAAA,SAAS,EAAE,CAAC,KAAD,EAAQ,CAAR;AAFG,KAAhB;AAKA,QAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,0BAAzB,EAAqDL,OAArD,CAAjB;AACAG,IAAAA,QAAQ,CAACG,OAAT,CAAiBP,UAAjB;AACD;;AAED,WAASM,0BAAT,CAAoCE,OAApC,EAA6C;AAC3C,QAAI,CAACf,YAAY,EAAjB,EAAqB;AAErBe,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,iBAAlB;;AAEA,UAAIH,KAAK,CAACG,iBAAN,GAA0B,CAA9B,EAAiC;AAC/BvB,QAAAA,QAAQ,CAACmB,OAAT,CAAiB,UAAAK,EAAE;AAAA,iBAAIA,EAAE,CAACC,SAAH,CAAaC,GAAb,CAAiB,UAAjB,CAAJ;AAAA,SAAnB;AACD,OAFD,MAGK;AACH1B,QAAAA,QAAQ,CAACmB,OAAT,CAAiB,UAAAK,EAAE;AAAA,iBAAIA,EAAE,CAACC,SAAH,CAAaE,MAAb,CAAoB,UAApB,CAAJ;AAAA,SAAnB;AACD;AACF,KAVD;AAWD;;AAEDlB,EAAAA,kBAAkB;AAGlB,MAAMmB,aAAa,GAAG3B,QAAQ,CAACI,aAAT,CAAuB,sBAAvB,CAAtB;AACA,MAAMwB,uBAAuB,GAAG5B,QAAQ,CAACI,aAAT,CAAuB,qBAAvB,CAAhC;;AAEA,WAASyB,aAAT,GAAyB;AACvB,WAAOF,aAAa,CAACG,YAAd,CAA2B,cAA3B,MAA+C,MAAtD;AACD;;AAEDH,EAAAA,aAAa,CAACI,gBAAd,CAA+B,OAA/B,EAAwC,YAAM;AAC5C,QAAI,CAACF,aAAa,EAAlB,EAAsB;AACpBG,MAAAA,cAAc;AACf,KAFD,MAGK;AACHC,MAAAA,kBAAkB;AACnB;AACF,GAPD;AASAL,EAAAA,uBAAuB,CAACG,gBAAxB,CAAyC,SAAzC,EAAoDC,cAApD;;AAEA,WAASA,cAAT,GAA0B;AACxBL,IAAAA,aAAa,CAACO,YAAd,CAA2B,cAA3B,EAA2C,MAA3C;AACAN,IAAAA,uBAAuB,CAACM,YAAxB,CAAqC,eAArC,EAAsD,MAAtD;AACD,GA3DS,CA6DV;;;AACA,WAASD,kBAAT,GAA8B;AAC5BN,IAAAA,aAAa,CAACO,YAAd,CAA2B,cAA3B,EAA2C,OAA3C;AACAN,IAAAA,uBAAuB,CAACM,YAAxB,CAAqC,eAArC,EAAsD,OAAtD;AACD;AAEF,CAnED","sourcesContent":["(function() {\n  const fixables = document.querySelectorAll('.fixable')\n\n  function isDesktopNav() {\n    const navButtons = document.querySelector('.mobile-buttons');\n    return window.getComputedStyle(navButtons).getPropertyValue('display') === 'none';\n  }\n\n  function monitorNavPosition() {\n    const primaryNav = document.querySelector('.site-header');\n    const options = {\n      rootMargin: '72px',\n      threshold: [0.999, 1]\n    }\n\n    const observer = new IntersectionObserver(toggleDesktopNavVisibility, options);\n    observer.observe(primaryNav);\n  }\n\n  function toggleDesktopNavVisibility(entries) {\n    if (!isDesktopNav()) return;\n\n    entries.forEach(entry => {\n      // Every pixel is visible at 1.\n      console.log(entry.intersectionRatio);\n\n      if (entry.intersectionRatio < 1) {\n        fixables.forEach(el => el.classList.add('js-fixed'));\n      }\n      else {\n        fixables.forEach(el => el.classList.remove('js-fixed'));\n      }\n    })\n  }\n\n  monitorNavPosition();\n\n\n  const wideNavButton = document.querySelector('.nav-primary__button');\n  const siteHeaderToggleElement = document.querySelector('.site-header__inner');\n\n  function wideNavIsOpen() {\n    return wideNavButton.getAttribute('aria-pressed') === 'true';\n  }\n\n  wideNavButton.addEventListener('click', () => {\n    if (!wideNavIsOpen()) {\n      showDesktopNav();\n    }\n    else {\n      resetWideNavButton();\n    }\n  });\n\n  siteHeaderToggleElement.addEventListener('focusin', showDesktopNav);\n\n  function showDesktopNav() {\n    wideNavButton.setAttribute('aria-pressed', 'true');\n    siteHeaderToggleElement.setAttribute('aria-expanded', 'true');\n  }\n\n  // Resets the wide nav button to be closed (it's default state).\n  function resetWideNavButton() {\n    wideNavButton.setAttribute('aria-pressed', 'false');\n    siteHeaderToggleElement.setAttribute('aria-expanded', 'false');\n  }\n\n})()\n"],"file":"scroll-interactions.js"}